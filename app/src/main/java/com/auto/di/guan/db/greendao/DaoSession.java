package com.auto.di.guan.db.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.auto.di.guan.db.DeviceInfo;
import com.auto.di.guan.db.GroupInfo;
import com.auto.di.guan.db.LevelInfo;
import com.auto.di.guan.db.User;
import com.auto.di.guan.db.UserAction;

import com.auto.di.guan.db.greendao.DeviceInfoDao;
import com.auto.di.guan.db.greendao.GroupInfoDao;
import com.auto.di.guan.db.greendao.LevelInfoDao;
import com.auto.di.guan.db.greendao.UserDao;
import com.auto.di.guan.db.greendao.UserActionDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig deviceInfoDaoConfig;
    private final DaoConfig groupInfoDaoConfig;
    private final DaoConfig levelInfoDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig userActionDaoConfig;

    private final DeviceInfoDao deviceInfoDao;
    private final GroupInfoDao groupInfoDao;
    private final LevelInfoDao levelInfoDao;
    private final UserDao userDao;
    private final UserActionDao userActionDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        deviceInfoDaoConfig = daoConfigMap.get(DeviceInfoDao.class).clone();
        deviceInfoDaoConfig.initIdentityScope(type);

        groupInfoDaoConfig = daoConfigMap.get(GroupInfoDao.class).clone();
        groupInfoDaoConfig.initIdentityScope(type);

        levelInfoDaoConfig = daoConfigMap.get(LevelInfoDao.class).clone();
        levelInfoDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        userActionDaoConfig = daoConfigMap.get(UserActionDao.class).clone();
        userActionDaoConfig.initIdentityScope(type);

        deviceInfoDao = new DeviceInfoDao(deviceInfoDaoConfig, this);
        groupInfoDao = new GroupInfoDao(groupInfoDaoConfig, this);
        levelInfoDao = new LevelInfoDao(levelInfoDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        userActionDao = new UserActionDao(userActionDaoConfig, this);

        registerDao(DeviceInfo.class, deviceInfoDao);
        registerDao(GroupInfo.class, groupInfoDao);
        registerDao(LevelInfo.class, levelInfoDao);
        registerDao(User.class, userDao);
        registerDao(UserAction.class, userActionDao);
    }
    
    public void clear() {
        deviceInfoDaoConfig.clearIdentityScope();
        groupInfoDaoConfig.clearIdentityScope();
        levelInfoDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
        userActionDaoConfig.clearIdentityScope();
    }

    public DeviceInfoDao getDeviceInfoDao() {
        return deviceInfoDao;
    }

    public GroupInfoDao getGroupInfoDao() {
        return groupInfoDao;
    }

    public LevelInfoDao getLevelInfoDao() {
        return levelInfoDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public UserActionDao getUserActionDao() {
        return userActionDao;
    }

}
